apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'pmd'

group = 'net.arksea'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'


dependencies {
    compile 'com.typesafe.akka:akka-actor_2.11:2.4.8'
    compile 'com.typesafe.akka:akka-remote_2.11:2.4.8'
    compile 'com.typesafe.akka:akka-cluster_2.11:2.4.8'
    compile 'com.typesafe.akka:akka-slf4j_2.11:2.4.8'
    compile 'org.scala-lang:scala-library:2.11.8'
    compile 'org.apache.logging.log4j:log4j-api:2.5'

    testCompile 'junit:junit:4.11'
    testCompile 'org.assertj:assertj-core:1.6.1'
    testCompile 'org.springframework:spring-test:4.2.2.RELEASE'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

//IDE中运行与调试的配置

//配置在IDE中运行及调试时的参数
task run(type: JavaExec, dependsOn: 'build') {
    classpath = sourceSets.test.runtimeClasspath + sourceSets.main.runtimeClasspath
    standardInput = System.in
    standardOutput = System.out
}

task debug(type: JavaExec, dependsOn: 'build') {
    classpath = sourceSets.test.runtimeClasspath + sourceSets.main.runtimeClasspath
    standardInput = System.in
    standardOutput = System.out
    debug = true
}

test.testLogging.showStandardStreams = true

pmd {
    toolVersion = '5.1.3'
    ruleSets = [
    'java-basic',
    'java-braces',
    'java-clone',
    'java-design',
    'java-empty',
    'java-finalizers',
    'java-imports',
    'java-migrating',
    'java-sunsecure',
    'java-unnecessary',
    'java-unusedcode'
    ]
}
